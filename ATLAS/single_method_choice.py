# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'single_method_choice.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from inverse_single_method import Ui_InverseSingleWindow
from det_single_method import Ui_DetSingleWindow
from PyQt5 import QtCore, QtGui, QtWidgets
from mult_single_method import Ui_MultSingleWindow
from multiplication import naiveMultiplication, Strassen
from determinant import naiveDeterminant, Sarrus, LU
from inverse import naiveInverse, CayleyHamilton
from emptyimg import empty
from closeWindow import QMainWindow

class Ui_SingleChoiceWindow(object):
    def __init__(self, arg, method):
        self.arg = arg
        self.method = method

    def setupUi(self, MainWindow):
        self.MainWindow = MainWindow
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1110, 831)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 5, 2, 1, 1)
        self.back_button = QtWidgets.QPushButton(self.centralwidget)
        self.back_button.setMinimumSize(QtCore.QSize(0, 50))
        self.back_button.setMaximumSize(QtCore.QSize(50, 16777215))
        self.back_button.setObjectName("back_button")
        self.gridLayout.addWidget(self.back_button, 0, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem1, 2, 0, 1, 3)
        self.submit_button = QtWidgets.QPushButton(self.centralwidget)
        self.submit_button.setMinimumSize(QtCore.QSize(125, 50))
        self.submit_button.setMaximumSize(QtCore.QSize(125, 16777215))
        self.font = QtGui.QFont()
        self.font.setPointSize(20)
        self.submit_button.setFont(self.font)
        self.submit_button.setObjectName("submit_button")
        self.gridLayout.addWidget(self.submit_button, 7, 0, 1, 3, QtCore.Qt.AlignHCenter)
        self.methods_info = QtWidgets.QLabel(self.centralwidget)
        self.methods_info.setFont(self.font)
        self.methods_info.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.methods_info.setAlignment(QtCore.Qt.AlignCenter)
        self.methods_info.setWordWrap(True)
        self.methods_info.setObjectName("methods_info")
        self.gridLayout.addWidget(self.methods_info, 1, 0, 1, 3)
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem2, 8, 0, 1, 3)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 5, 0, 1, 1)
        self.method_store = QtWidgets.QScrollArea(self.centralwidget)
        self.method_store.setWidgetResizable(True)
        self.method_store.setObjectName("method_store")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 358, 201))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout.setObjectName("verticalLayout")
        self.method_store.setWidget(self.scrollAreaWidgetContents)
        self.gridLayout.addWidget(self.method_store, 5, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1110, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        if self.method == "mult":
            self.mult()
            self.submit_button.clicked.connect(self.multCall)
        elif self.method == "det":
            self.det()
            self.submit_button.clicked.connect(self.detCall)
        elif self.method == "inv":
            self.inv()
            self.submit_button.clicked.connect(self.invCall)
        elif self.method == "solve":
            pass
        elif self.method == "e_val":
            pass
        elif self.method == "e_vec":
            pass

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "ATLAS"))
        self.back_button.setText(_translate("MainWindow", "Go Back"))
        self.submit_button.setText(_translate("MainWindow", "Submit"))
        self.methods_info.setText(_translate("MainWindow", "Select one of the methods below:"))

    def mult(self):
        self.standard = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.standard.setObjectName("standard")
        self.verticalLayout.addWidget(self.standard)
        self.standard.setText("Standard Method")
        self.standard.setFont(self.font)

        self.strassen = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.strassen.setObjectName("strassen")
        self.verticalLayout.addWidget(self.strassen)
        self.strassen.setText("Strassen's Method")
        self.strassen.setFont(self.font)

    def multCall(self):
        if self.standard.isChecked() == True:
            mult = naiveMultiplication(*self.arg)
            empty()
            mult.calc()
            mult.latex2img()
        elif self.strassen.isChecked() == True:
            empty()
            mult = Strassen(*self.arg)
            mult.calc()
            mult.latex2img()

        self.window = QMainWindow()
        self.ui = Ui_MultSingleWindow()
        self.ui.setupUi(self.window)
        self.MainWindow.hide()
        self.window.showMaximized()

    def det(self):
        self.laplace = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.laplace.setObjectName("laplace")
        self.verticalLayout.addWidget(self.laplace)
        self.laplace.setText("Laplace Expansion")
        self.laplace.setFont(self.font)

        if self.arg.rows == 3:
            self.sarrus = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
            self.sarrus.setObjectName("strassen")
            self.verticalLayout.addWidget(self.sarrus)
            self.sarrus.setText("Sarrus' Method")
            self.sarrus.setFont(self.font)

        self.lu = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.lu.setObjectName("strassen")
        self.verticalLayout.addWidget(self.lu)
        self.lu.setText("LU Decomposition")
        self.lu.setFont(self.font)

    def detCall(self):
        if self.laplace.isChecked() == True:
            determinant = naiveDeterminant(self.arg)
            empty()
            ans = determinant.calc()
            determinant.latex2img()
        elif self.sarrus.isChecked() == True:
            empty()
            determinant = Sarrus(self.arg)
            ans = determinant.calc()
            determinant.latex2img()
        elif self.lu.isChecked() == True:
            empty()
            determinant = LU(self.arg)
            ans = determinant.calc()
            determinant.latex2img()

        self.window = QMainWindow()
        self.ui = Ui_DetSingleWindow(ans)
        self.ui.setupUi(self.window)
        self.MainWindow.hide()
        self.window.showMaximized()

    def inv(self):
        self.standard = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.standard.setObjectName("standard")
        self.verticalLayout.addWidget(self.standard)
        self.standard.setText("Standard Method")
        self.standard.setFont(self.font)

        self.cayley = QtWidgets.QRadioButton(self.scrollAreaWidgetContents)
        self.cayley.setObjectName("cayley")
        self.verticalLayout.addWidget(self.cayley)
        self.cayley.setText("Cayley-Hamilton Theorem")
        self.cayley.setFont(self.font)

    def invCall(self):
        if self.standard.isChecked() == True:
            empty()
            inverse = naiveInverse(self.arg)
            check, message = inverse.check()
            if check == True:
                inverse.calc()
                inverse.latex2img()
                ans = message
            elif check == False:
                ans = message
        elif self.cayley.isChecked() == True:
            empty()
            inverse = CayleyHamilton(self.arg)
            check, message = inverse.check()
            if check == True:
                inverse.calc()
                inverse.latex2img()
                ans = message
            elif check == False:
                ans = message

        self.window = QMainWindow()
        self.ui = Ui_InverseSingleWindow(ans)
        self.ui.setupUi(self.window)
        self.MainWindow.hide()
        self.window.showMaximized()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QMainWindow()
    ui = Ui_SingleChoiceWindow(None, None)
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
